{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "project": ["./tsconfig.json", "./packages/*/tsconfig.json"]
  },
  "plugins": ["@typescript-eslint", "prettier"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "rules": {
    "prettier/prettier": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-unsafe-argument": "off",
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "TSAsExpression > TSAnyKeyword",
        "message": "Do not use 'as any'; use proper typing, generics, or runtime guards."
      },
      {
        "selector": "TSAsExpression[expression.type='TSAsExpression'] TSUnknownKeyword",
        "message": "Do not use 'as unknown as'; avoid double assertions by validating or narrowing types."
      }
    ]
  },
  "ignorePatterns": ["node_modules", "dist", "**/*.js", "**/*.cjs", "**/*.mjs"]
}
