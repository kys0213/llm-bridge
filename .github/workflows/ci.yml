name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint check
        run: pnpm lint

      - name: Format check with detailed output
        run: ./scripts/format-check.sh

      - name: Type check and build
        run: pnpm build

      - name: Run unit tests (skip E2E)
        run: pnpm test:ci

  build-verification:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build

      - name: Verify build artifacts
        run: |
          echo "Checking build artifacts..."

          # Count dist directories (CommonJS builds)
          DIST_COUNT=$(find packages -name "dist" -type d | wc -l)
          echo "Found $DIST_COUNT dist directories"

          # Count esm directories (ESM builds)
          ESM_COUNT=$(find packages -name "esm" -type d | wc -l)
          echo "Found $ESM_COUNT esm directories"

          # Verify main packages have both builds
          EXPECTED_PACKAGES=$(find packages -maxdepth 1 -type d -name "*-llm-bridge" | wc -l)
          echo "Expected $EXPECTED_PACKAGES bridge packages to have builds"

          if [ "$DIST_COUNT" -eq 0 ] || [ "$ESM_COUNT" -eq 0 ]; then
            echo "❌ Build verification failed: Missing build artifacts"
            exit 1
          fi

          echo "✅ Build verification passed"
